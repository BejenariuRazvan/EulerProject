import  math

"""
If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000.
"""
from js2py.constructors.jsmath import Math


def problem1():
    sum = 0
    for i in range(1, 1000):
        if i % 3 == 0 or i % 5 == 0:
            sum += i
    print(sum)


"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""


def problem2():
    y = 2
    sum = 0
    while y <= 4000000:
        if y % 2 == 0:
            sum += y
        x, y = y, x
        y += x
    print(sum)


"""
The prime factors of 13195 are 5, 7, 13 and 29.
What is the largest prime factor of the number 600851475143 ?
"""


def smallest_prime(nr):
    for i in range(2, int(math.sqrt(nr)) + 1):
        if nr % i == 0:
            return i
    return nr


def problem3():
    nr = 600851475143
    while True:
        p = smallest_prime(nr)
        if p < nr:
            nr //= p
        else:
            break
    print(p)

"""
A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 Ã— 99.
Find the largest palindrome made from the product of two 3-digit numbers.
"""


if __name__ == "__main__":
    print("Result:")
    # problem3()
    # problem2()
    # problem1()
